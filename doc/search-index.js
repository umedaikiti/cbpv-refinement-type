var searchIndex = JSON.parse('{\
"lib":{"doc":"","i":[[0,"context","lib","",null,null],[3,"Context","lib::context","",null,null],[12,"0","","",0,null],[11,"get","","",0,[[["str",15]],["option",4]]],[11,"new","","",0,[[],["context",3]]],[11,"push","","",0,[[["into",8],["string",3]]]],[11,"pop","","",0,[[],["option",4]]],[11,"vars","","",0,[[],[["string",3],["hashset",3]]]],[11,"extend","","",0,[[]]],[11,"disjoint_union","","",0,[[],["option",4]]],[0,"lambda","lib","",null,null],[0,"parser","lib::lambda","",null,null],[5,"term","lib::lambda::parser","",null,[[["str",15]],[["str",15],["term",4],["iresult",6]]]],[0,"term","lib::lambda","",null,null],[4,"Term","lib::lambda::term","",null,null],[13,"Var","","",1,null],[13,"Lambda","","",1,null],[13,"App","","",1,null],[13,"Unit","","",1,null],[13,"Int","","",1,null],[13,"NDInt","","",1,null],[13,"Pair","","",1,null],[13,"Inr","","",1,null],[13,"Inl","","",1,null],[13,"Case","","",1,null],[13,"PatternMatch","","",1,null],[13,"Fail","","",1,null],[13,"Add","","",1,null],[13,"Leq","","",1,null],[13,"Explode","","",1,null],[13,"Fix","","",1,null],[0,"type","lib::lambda","",null,null],[4,"Type","lib::lambda::type","",null,null],[13,"Var","","",2,null],[13,"Unit","","",2,null],[13,"Pair","","",2,null],[13,"Sum","","",2,null],[13,"Function","","",2,null],[0,"logic","lib","",null,null],[4,"Term","lib::logic","",null,null],[13,"Var","","",3,null],[13,"Unit","","",3,null],[13,"Int","","",3,null],[13,"Pair","","",3,null],[13,"Inl","","",3,null],[13,"Inr","","",3,null],[13,"Add","","",3,null],[11,"subst","","",3,[[["hashmap",3]],["term",4]]],[11,"fv","","",3,[[],[["hashset",3],["string",3]]]],[11,"from_underlying_value","","",3,[[["value",4]],[["result",4],["string",3],["term",4]]]],[11,"to_smtlib","","",3,[[],[["option",4],["term",4]]]],[4,"Formula","","",null,null],[13,"PVar","","",4,null],[13,"True","","",4,null],[13,"False","","",4,null],[13,"Equal","","",4,null],[13,"Leq","","",4,null],[13,"And","","",4,null],[13,"Or","","",4,null],[13,"Implies","","",4,null],[11,"mk_fresh_pname","","",4,[[],["string",3]]],[11,"reset_pname_counter","","",4,[[]]],[11,"mk_and","","",4,[[["formula",4],["vec",3]],["formula",4]]],[11,"mk_or","","",4,[[["formula",4],["vec",3]],["formula",4]]],[11,"fv","","",4,[[],[["hashset",3],["string",3]]]],[11,"subst_term","","",4,[[["hashmap",3]],["formula",4]]],[11,"rename_tvar","","",4,[[["str",15]],["formula",4]]],[11,"simplify_equalities","","",4,[[]]],[11,"to_smtlib","","",4,[[],[["option",4],["formula",4]]]],[5,"to_smtlib","","",null,[[["context",3],["vec",3]],[["option",4],["smtlib",3]]]],[5,"simplify","","",null,[[["context",3],["vec",3],["vec",3]]]],[5,"remove_pair_sum_unit_empty","","",null,[[["context",3],["formula",4],["value",4]],["vec",3]]],[0,"refinement","lib","",null,null],[0,"infer","lib::refinement","",null,null],[5,"value","lib::refinement::infer","",null,[[["value",4],["context",3],["context",3]]]],[5,"computation","","",null,[[["computation",4],["context",3],["context",3]]]],[0,"infer_debug","lib::refinement","",null,null],[3,"Value","lib::refinement::infer_debug","",null,null],[12,"term","","",5,null],[12,"ty","","",5,null],[4,"ValueTerm","","",null,null],[13,"Var","","",6,null],[13,"Unit","","",6,null],[13,"Int","","",6,null],[13,"Pair","","",6,null],[13,"Inr","","",6,null],[13,"Inl","","",6,null],[13,"Thunk","","",6,null],[3,"Computation","","",null,null],[12,"term","","",7,null],[12,"ty","","",7,null],[4,"ComputationTerm","","",null,null],[13,"Return","","",8,null],[13,"SeqComp","","",8,null],[13,"Lambda","","",8,null],[13,"App","","",8,null],[13,"PatternMatch","","",8,null],[13,"Case","","",8,null],[13,"Force","","",8,null],[13,"Fix","","",8,null],[13,"Explode","","",8,null],[13,"Fail","","",8,null],[13,"Add","","",8,null],[13,"Leq","","",8,null],[13,"NDInt","","",8,null],[5,"value","","",null,[[["value",4],["context",3],["context",3]]]],[5,"computation","","",null,[[["computation",4],["context",3],["context",3]]]],[0,"type","lib::refinement","",null,null],[4,"Value","lib::refinement::type","",null,null],[13,"Int","","",9,null],[13,"Unit","","",9,null],[13,"Pair","","",9,null],[13,"Empty","","",9,null],[13,"Sum","","",9,null],[13,"U","","",9,null],[4,"Computation","","",null,null],[13,"Function","","",10,null],[13,"F","","",10,null],[11,"erase","","",9,[[],["value",4]]],[11,"subtype","","",9,[[["context",3],["value",4]],["vec",3]]],[11,"subst_term","","",9,[[["hashmap",3]],["value",4]]],[11,"erase","","",10,[[],["computation",4]]],[11,"subst_term","","",10,[[["hashmap",3]],["computation",4]]],[11,"subtype","","",10,[[["context",3],["computation",4]],["vec",3]]],[11,"erase_purify","lib::context","",0,[[],[["value",4],["context",3]]]],[11,"collect_predicate","","",0,[[],[["formula",4],["vec",3]]]],[0,"smtlib","lib","",null,null],[4,"Sort","lib::smtlib","",null,null],[13,"Int","","",11,null],[13,"Bool","","",11,null],[4,"Operation","","",null,null],[13,"Add","","",12,null],[13,"Sub","","",12,null],[13,"Mul","","",12,null],[13,"Int","","",12,null],[13,"True","","",12,null],[13,"False","","",12,null],[4,"Term","","",null,null],[13,"Var","","",13,null],[13,"App","","",13,null],[4,"Predicate","","",null,null],[13,"Var","","",14,null],[13,"Leq","","",14,null],[13,"Geq","","",14,null],[13,"Lt","","",14,null],[13,"Gt","","",14,null],[13,"Equal","","",14,null],[4,"Formula","","",null,null],[13,"True","","",15,null],[13,"False","","",15,null],[13,"App","","",15,null],[13,"And","","",15,null],[13,"Or","","",15,null],[13,"Implies","","",15,null],[3,"SmtLib","","",null,null],[12,"preds","","",16,null],[12,"constraints","","",16,null],[0,"underlying","lib","",null,null],[0,"infer","lib::underlying","",null,null],[0,"term","","",null,null],[4,"Value","lib::underlying::term","",null,null],[13,"Var","","",17,null],[13,"Unit","","",17,null],[13,"Int","","",17,null],[13,"Pair","","",17,null],[13,"Inr","","",17,null],[13,"Inl","","",17,null],[13,"Thunk","","",17,null],[11,"subst_type","","",17,[[["map",3]]]],[11,"simplify","","",17,[[["hashset",3]]]],[11,"subst","","",17,[[["hashmap",3],["hashset",3]]]],[11,"free_type_vars","","",17,[[],["varset",3]]],[4,"Computation","","",null,null],[13,"Return","","",18,null],[13,"SeqComp","","",18,null],[13,"Lambda","","",18,null],[13,"App","","",18,null],[13,"PatternMatch","","",18,null],[13,"Case","","",18,null],[13,"Force","","",18,null],[13,"Fix","","",18,null],[13,"Explode","","",18,null],[13,"Fail","","",18,null],[13,"Add","","",18,null],[13,"Leq","","",18,null],[13,"NDInt","","",18,null],[11,"subst_type","","",18,[[["map",3]]]],[11,"free_type_vars","","",18,[[],["varset",3]]],[11,"simplify","","",18,[[["hashset",3]]]],[11,"subst","","",18,[[["hashmap",3],["hashset",3]]]],[0,"translate","lib::underlying","",null,null],[5,"cbv_of_lambda","lib::underlying::translate","",null,[[["context",3],["term",4]]]],[5,"cbn_of_lambda","","",null,[[["context",3],["term",4]]]],[0,"type","lib::underlying","",null,null],[4,"Value","lib::underlying::type","",null,null],[13,"Var","","",19,null],[13,"Int","","",19,null],[13,"Unit","","",19,null],[13,"Pair","","",19,null],[13,"Empty","","",19,null],[13,"Sum","","",19,null],[13,"U","","",19,null],[4,"Computation","","",null,null],[13,"Var","","",20,null],[13,"Function","","",20,null],[13,"F","","",20,null],[3,"Map","","",null,null],[12,"value","","",21,null],[12,"computation","","",21,null],[11,"new","","",21,[[],["map",3]]],[11,"compose","","",21,[[["map",3]],["map",3]]],[11,"dom","","",21,[[],["varset",3]]],[11,"fv_cod","","",21,[[],["varset",3]]],[3,"VarSet","","",null,null],[12,"value","","",22,null],[12,"computation","","",22,null],[11,"extend","","",22,[[["varset",3]]]],[11,"new","","",22,[[],["varset",3]]],[11,"is_disjoint","","",22,[[["varset",3]],["bool",15]]],[11,"is_empty","","",22,[[],["bool",15]]],[11,"mk_fresh_name","","",19,[[],["string",3]]],[11,"subst","","",19,[[["map",3]]]],[11,"fv","","",19,[[],["varset",3]]],[11,"is_pure","","",19,[[],["bool",15]]],[11,"purify","lib::context","",0,[[]]],[11,"mk_fresh_name","lib::underlying::type","",20,[[],["string",3]]],[11,"subst","","",20,[[["map",3]]]],[11,"fv","","",20,[[],["varset",3]]],[0,"unification","lib::underlying","",null,null],[3,"Constraints","lib::underlying::unification","",null,null],[12,"value","","",23,null],[12,"computation","","",23,null],[11,"extend","","",23,[[["constraints",3]]]],[11,"from_map","","",23,[[["map",3]],["constraints",3]]],[11,"unify","","",23,[[],[["result",4],["map",3],["string",3]]]],[0,"utils","lib","",null,null],[5,"mk_fresh_name","lib::utils","",null,[[["hashset",3],["str",15]],["string",3]]],[11,"from","lib::context","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","lib::lambda::term","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","lib::lambda::type","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","lib::logic","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","lib::refinement::infer_debug","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","lib::refinement::type","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","lib::smtlib","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","lib::underlying::term","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","lib::underlying::type","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","lib::underlying::unification","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","lib::context","",0,[[["vec",3]]]],[11,"clone","","",0,[[],["context",3]]],[11,"clone","lib::lambda::term","",1,[[],["term",4]]],[11,"clone","lib::lambda::type","",2,[[],["type",4]]],[11,"clone","lib::logic","",3,[[],["term",4]]],[11,"clone","","",4,[[],["formula",4]]],[11,"clone","lib::refinement::infer_debug","",5,[[],["value",3]]],[11,"clone","","",6,[[],["valueterm",4]]],[11,"clone","","",7,[[],["computation",3]]],[11,"clone","","",8,[[],["computationterm",4]]],[11,"clone","lib::refinement::type","",9,[[],["value",4]]],[11,"clone","","",10,[[],["computation",4]]],[11,"clone","lib::underlying::term","",17,[[],["value",4]]],[11,"clone","","",18,[[],["computation",4]]],[11,"clone","lib::underlying::type","",19,[[],["value",4]]],[11,"clone","","",20,[[],["computation",4]]],[11,"clone","lib::underlying::unification","",23,[[],["constraints",3]]],[11,"eq","lib::context","",0,[[["context",3]],["bool",15]]],[11,"ne","","",0,[[["context",3]],["bool",15]]],[11,"eq","lib::lambda::term","",1,[[["term",4]],["bool",15]]],[11,"ne","","",1,[[["term",4]],["bool",15]]],[11,"eq","lib::lambda::type","",2,[[["type",4]],["bool",15]]],[11,"ne","","",2,[[["type",4]],["bool",15]]],[11,"eq","lib::logic","",3,[[["term",4]],["bool",15]]],[11,"ne","","",3,[[["term",4]],["bool",15]]],[11,"eq","","",4,[[["formula",4]],["bool",15]]],[11,"ne","","",4,[[["formula",4]],["bool",15]]],[11,"eq","lib::refinement::infer_debug","",5,[[["value",3]],["bool",15]]],[11,"ne","","",5,[[["value",3]],["bool",15]]],[11,"eq","","",6,[[["valueterm",4]],["bool",15]]],[11,"ne","","",6,[[["valueterm",4]],["bool",15]]],[11,"eq","","",7,[[["computation",3]],["bool",15]]],[11,"ne","","",7,[[["computation",3]],["bool",15]]],[11,"eq","","",8,[[["computationterm",4]],["bool",15]]],[11,"ne","","",8,[[["computationterm",4]],["bool",15]]],[11,"eq","lib::refinement::type","",9,[[["value",4]],["bool",15]]],[11,"ne","","",9,[[["value",4]],["bool",15]]],[11,"eq","","",10,[[["computation",4]],["bool",15]]],[11,"ne","","",10,[[["computation",4]],["bool",15]]],[11,"eq","lib::underlying::term","",17,[[["value",4]],["bool",15]]],[11,"ne","","",17,[[["value",4]],["bool",15]]],[11,"eq","","",18,[[["computation",4]],["bool",15]]],[11,"ne","","",18,[[["computation",4]],["bool",15]]],[11,"eq","lib::underlying::type","",19,[[["value",4]],["bool",15]]],[11,"ne","","",19,[[["value",4]],["bool",15]]],[11,"eq","","",20,[[["computation",4]],["bool",15]]],[11,"ne","","",20,[[["computation",4]],["bool",15]]],[11,"fmt","lib::context","",0,[[["formatter",3]],["result",6]]],[11,"fmt","lib::lambda::term","",1,[[["formatter",3]],["result",6]]],[11,"fmt","lib::lambda::type","",2,[[["formatter",3]],["result",6]]],[11,"fmt","lib::logic","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","lib::refinement::infer_debug","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","lib::refinement::type","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","lib::underlying::term","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","lib::underlying::type","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","lib::underlying::unification","",23,[[["formatter",3]],["result",6]]],[11,"fmt","lib::logic","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","lib::refinement::type","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","lib::smtlib","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","lib::underlying::type","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"to_smtlib","","",19,[[],[["option",4],["sort",4]]]],[11,"refinement_template","lib::refinement::type","",9,[[["context",3],["value",4],["context",3],["str",15]],["value",4]]],[11,"refinement_template","","",10,[[["context",3],["computation",4],["context",3],["str",15]],["computation",4]]],[11,"infer","lib::underlying::term","",17,[[["context",3]],[["string",3],["result",4]]]],[11,"infer","","",18,[[["context",3]],[["string",3],["result",4]]]]],"p":[[3,"Context"],[4,"Term"],[4,"Type"],[4,"Term"],[4,"Formula"],[3,"Value"],[4,"ValueTerm"],[3,"Computation"],[4,"ComputationTerm"],[4,"Value"],[4,"Computation"],[4,"Sort"],[4,"Operation"],[4,"Term"],[4,"Predicate"],[4,"Formula"],[3,"SmtLib"],[4,"Value"],[4,"Computation"],[4,"Value"],[4,"Computation"],[3,"Map"],[3,"VarSet"],[3,"Constraints"]]},\
"main":{"doc":"","i":[[5,"main","main","",null,[[]]]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);